definitions:
  domain.Permission:
    properties:
      action:
        type: string
      id:
        type: integer
      mark:
        type: string
      path:
        type: string
      perKey:
        type: string
      status:
        type: boolean
      title:
        type: string
    type: object
  domain.Role:
    properties:
      createTime:
        type: string
      id:
        type: integer
      roleKey:
        type: string
      roleName:
        type: string
      sort:
        type: integer
      status:
        type: boolean
    type: object
  domain.RoleDetail:
    properties:
      perList:
        items:
          $ref: '#/definitions/domain.Permission'
        type: array
      roleBase:
        $ref: '#/definitions/domain.Role'
    type: object
  ginx.JsonResult:
    properties:
      code:
        type: integer
      data: {}
      msg:
        type: string
    type: object
  types.CreateRoleReq:
    properties:
      perIds:
        description: 权限ID列表
        items:
          type: integer
        type: array
      roleKey:
        description: 角色key
        type: string
      roleName:
        description: 角色名
        type: string
      sort:
        description: 排序
        type: integer
      status:
        description: 角色状态
        type: boolean
    required:
    - roleKey
    - roleName
    - status
    type: object
  types.LoginForm:
    properties:
      password:
        type: string
      user_name:
        type: string
    type: object
  types.RolePageListReq:
    properties:
      keywords:
        description: '搜索关键词: 角色名，角色key，用于模糊搜索'
        type: string
      page:
        description: 页码
        type: integer
      size:
        description: 页大小
        type: integer
      status:
        description: 角色状态
        type: boolean
    type: object
  types.UpdateRoleReq:
    properties:
      id:
        description: 角色ID
        type: integer
      perIds:
        description: 权限ID列表
        items:
          type: integer
        type: array
      roleName:
        description: 角色名
        type: string
      sort:
        description: 排序
        type: integer
      status:
        description: 角色状态
        type: boolean
    required:
    - id
    - roleName
    type: object
  types.UserForm:
    properties:
      addr:
        type: string
      avatar:
        type: string
      birthDay:
        type: string
      male:
        type: string
      nick_name:
        type: string
      password:
        type: string
      phone:
        type: string
      profession:
        type: string
      school:
        type: string
      signature:
        type: string
      user_name:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/v1/na/login:
    post:
      consumes:
      - application/json
      description: 用户密码登录
      parameters:
      - description: user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/types.LoginForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: 用户密码登录
      tags:
      - 公共模块
  /api/v1/na/register:
    post:
      consumes:
      - application/json
      description: 注册用户
      parameters:
      - description: user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/types.UserForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: 注册用户
      tags:
      - 公共模块
  /api/v1/roles:
    get:
      consumes:
      - application/json
      description: 获取角色列表
      parameters:
      - description: RolePageListReq
        in: body
        name: use
        required: true
        schema:
          $ref: '#/definitions/types.RolePageListReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Role'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ginx.JsonResult'
      summary: 获取角色列表
      tags:
      - 角色模块
    post:
      consumes:
      - application/json
      description: 创建角色
      parameters:
      - description: CreateRoleReq
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/types.CreateRoleReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ginx.JsonResult'
      summary: 创建角色
      tags:
      - 角色模块
    put:
      consumes:
      - application/json
      description: 更新角色
      parameters:
      - description: UpdateRoleReq
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/types.UpdateRoleReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ginx.JsonResult'
      summary: 更新角色
      tags:
      - 角色模块
  /api/v1/roles/{id}:
    delete:
      consumes:
      - application/json
      description: 删除角色
      parameters:
      - description: 角色ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ginx.JsonResult'
      summary: 删除角色
      tags:
      - 角色模块
    get:
      consumes:
      - application/json
      description: 查询角色详情
      parameters:
      - description: 角色ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.RoleDetail'
      summary: 查询角色详情
      tags:
      - 角色模块
  /api/v1/users:
    put:
      consumes:
      - application/json
      description: 更新用户信息
      parameters:
      - description: user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/types.UserForm'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: 更新用户信息
      tags:
      - 用户模块
  /api/v1/users/{id}:
    delete:
      consumes:
      - application/json
      description: 删除用户
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: 删除用户
      tags:
      - 用户模块
swagger: "2.0"
